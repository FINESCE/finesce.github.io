[
    {
        "Last Update": "2015-09-04",
        "Target Usage": "",
        "Name": "Scene Manager DSE",
        "Short Description": "",
        "Documentation": {
            "Description": "\n\n<h3>\n Basic Concepts\n</h3>\n\n<p>\n This DSE works together with the Publish/Subscribe Context Broker \u2013 Context Awareness Platform in order to perform the event configuration, receive alert notifications, and manage the subscriptions to those events. A prototype web application has been developed for accessing the functionalities of the DSE integrated in the Madrid trial. The figure below provides a screenshot of this web application, with the tab corresponding to the Scene Manager DSE configured scenes and triggered alerts related to the weather forecast service of the Madrid trial.\n</p>\n\n<p style=\"text-align:center;\">\n <img alt=\"\" src=\"images/redmine/SceneManagerDSE.png\" class=img-responsive />\n</p>\n\n\n<h3>\n Basic Design Principles\n</h3>\n\n<p>\n This section provides a basic overview of the information model that has been developed for the Scene Manager DSE. The overview focuses on the specific usage case of the DSE integrated with the weather forecast service of the Madrid trial. The data model corresponding to the weather forecasting services is depicted below as an example:\n</p>\n\n<p style=\"text-align:center;\">\n <img alt=\"\" src=\"images/redmine/SceneManagerDataModel.png\" class=img-responsive />\n</p>\n\n<p>\n Load Data\n</p>\n\n<blockquote>\n <p>\n  Request:\n </p>\n</blockquote>\n\n<pre>\nhttp://publish_subscribe_ip/CB/ContextBroker/contextUpdate\n\nContent-Type: \n    application/xml\nRequest body:\n    &lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n    &lt;contextML xmlns=\"http://ContextML/1.7\" \n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"  \n    xsi:schemaLocation=\"http://ContextML/1.7 ../ContextML-1.7.xsd\"&gt;\n        &lt;ctxEls&gt;\n            &lt;ctxEl&gt;\n                &lt;contextProvider id=\"MyClient\" v=\"1.2.1\"/&gt;\n                &lt;entity id=\"123456789123\" type=\"imei\"/&gt;\n                &lt;scope&gt;cell&lt;/scope&gt;\n                &lt;timestamp&gt;2014-02-05T10:10:10+01:00&lt;/timestamp&gt;\n                &lt;expires&gt;2020-01-01T10:10:10+01:00&lt;/expires&gt;\n                &lt;dataPart&gt;\n                    &lt;par n=\"dirviento\"&gt;4&lt;/par&gt;\n                    &lt;par n=\"humrel\"&gt;4&lt;/par&gt;\n                    &lt;par n=\"modviento\"&gt;4&lt;/par&gt;\n                    &lt;par n=\"precip\"&gt;4&lt;/par&gt;\n                    &lt;par n=\"temp\"&gt;4&lt;/par&gt;               \n                &lt;/dataPart&gt;\n            &lt;/ctxEl&gt;\n        &lt;/ctxEls&gt;\n    &lt;/contextML&gt;\n</pre>\n\n<blockquote>\n <p>\n  Response:\n </p>\n</blockquote>\n\n<pre>\nResponse code:\n    200 OK\nContent-Type:\n    application/xml\nResponse body:\n    &lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n    &lt;contextML xmlns=\"http://ContextML/1.7\" \n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \n    xsi:schemaLocation=\"http://ContextML/1.7 http://contextml.tilab.com/ContextML-1.7.xsd\"&gt;\n        &lt;ctxResp&gt;\n            &lt;contextProvider id=\"CB\" v=\"1.4.5\"/&gt;\n            &lt;timestamp&gt;2015-02-03T12:38:40+02:00&lt;/timestamp&gt;\n            &lt;entity id=\"123456789123\" type=\"imei\"/&gt;\n            &lt;method&gt;contextUpdate&lt;/method&gt;\n            &lt;resp status=\"OK\" code=\"200\"/&gt;\n        &lt;/ctxResp&gt;\n    &lt;/contextML&gt;\n</pre>\n\n<blockquote>\n <p>\n  Notifications to the client\n </p>\n</blockquote>\n\n<pre>\nResponse code:\n    200 OK\nContent-Type:\n    application/xml\nResponse body:\n    ctxData=&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n     &lt;contextML&gt;\n      &lt;ctxEls&gt;\n        &lt;ctxEl subId=\"62\"&gt;\n          &lt;contextProvider id=\"CB\" v=\"1.4.5\"/&gt;\n          &lt;entity id=\"123456789123\" type=\"imei\"/&gt;\n          &lt;scope&gt;cell&lt;/scope&gt;\n          &lt;timestamp&gt;2015-02-03T12:38:40+02:00&lt;/timestamp&gt;\n          &lt;expires&gt;2020-11-20T16:37:55+01:00&lt;/expires&gt;\n          &lt;dataPart&gt;\n            &lt;par n=\"temp\"&gt;4&lt;/par&gt;\n          &lt;/dataPart&gt;\n        &lt;/ctxEl&gt;\n      &lt;/ctxEls&gt;\n     &lt;/contextML&gt;\n</pre>\n\n<p>\n <em>\n  Methods\n </em>\n</p>\n\n<p>\n Get Alerts: This method provides the last notifications which the Publish/Subscribe Context Broker has sent to the client. It accepts GET parameters:\n</p>\n\n<ul>\n <li>\n  <em>\n   method\n  </em>\n  It shall be a String, representing the format of output data. There are two possible values:\n  <ul>\n   <li>\n    json\n   </li>\n   <li>\n    xml\n   </li>\n  </ul>\n </li>\n <li>\n  <em>\n   fecha_ini\n  </em>\n  It shall be an Integer representing a date in UNIX_TIMESTAMP format.\n </li>\n <li>\n  <em>\n   fecha_fin\n  </em>\n  It shall be an Integer representing a date in UNIX_TIMESTAMP format.\n </li>\n <li>\n  <em>\n   module\n  </em>\n  Should be an String, representing the module from which the alerts are provided (meteo, wsn, \u2026).\n </li>\n <li>\n  <em>\n   parameter\n  </em>\n  It shall be a String, representing a parameter (temp, humrel, \u2026). This parameter is optional.\n </li>\n</ul>\n\n<p>\n <em>\n  Example\n </em>\n</p>\n\n<blockquote>\n <p>\n  GET\n </p>\n</blockquote>\n\n<pre>\nhttp://s414608724.mialojamiento.es/FINESCE/api/{module_name}/{function_name}/?parameters\n</pre>\n\n<blockquote>\n <p>\n  Example using JSON\n </p>\n</blockquote>\n\n<pre>\nhttp://s414608724.mialojamiento.es/FINESCE/api/wf/getalerts/?action=service_alerts&amp;method=json&amp;module=wf&amp;parameter=temp&amp;fecha_ini=1421931600&amp;fecha_fin=1423054800\n\nREQUEST\n\nACCEPT\n    application/json\n\nRESPONSE\nResponse code:\n    200 OK\nContent-Type:\n    application/json\nResponse body:\n    {\"meteo\": [\n        { \n            \"temp\":\"6.29\" ,  \n            \"humrel\":\"0.60\" ,  \n            \"precip\":\"0.20\" ,  \n            \"modviento\":\"3\" ,  \n            \"dirviento\":\"190\" ,  \n            \"timestamp\":\"2015-01-22 16:00:00\" ,  \n            \"entity\":\"meteo\" ,  \n            \"scope\":\"cell\" \n        },\n        { \n            \"temp\":\"6.5\" ,  \n            \"humrel\":\"0.57\" ,  \n            \"precip\":\"0.0\" ,  \n            \"modviento\":\"3.4\" ,  \n            \"dirviento\":\"192\" ,  \n            \"timestamp\":\"2015-01-22 15:00:00\" ,  \n            \"entity\":\"meteo\" ,  \n            \"scope\":\"cell\" \n        },\n        { \n            \"temp\":\"7.2\" ,  \n            \"humrel\":\"0.47\" ,  \n            \"precip\":\"0.0\" ,  \n            \"modviento\":\"4.4\" ,  \n            \"dirviento\":\"191\" ,  \n            \"timestamp\":\"2015-01-22 14:00:00\" ,  \n            \"entity\":\"meteo\" ,  \n            \"scope\":\"cell\" \n        }\n    ]}\n</pre>\n\n<blockquote>\n <p>\n  Example using XML\n </p>\n</blockquote>\n\n<pre>\nhttp://s414608724.mialojamiento.es/FINESCE/api/wf/getalerts/?method=xml&amp;module=wf&amp;parameter=temp&amp;fecha_ini=1421931600&amp;fecha_fin=1422001600\n\nREQUEST\n\nACCEPT:     \n    application/xml\n\nRESPONSE\nResponse code:     \n    200 OK\nContent-Type:        \n    application/xml\nResponse body:    \n    &lt;contextML xmlns=\"http://ContextML/1.7\" \n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"  \n    xsi:schemaLocation=\"http://ContextML/1.7 ../ContextML-1.7.xsd\"&gt;\n        &lt;ctxEls&gt;\n            &lt;ctxEl&gt;\n                &lt;contextProvider id=\"MyClient\" v=\"1.2.1\"&gt;&lt;/contextProvider&gt;\n                &lt;entity id=\"123456789123\" type=\"imei\"&gt;&lt;/entity&gt;\n                &lt;scope&gt;cell&lt;/scope&gt;\n                &lt;timestamp&gt;2015-01-23T22:10:18+01:00&lt;/timestamp&gt;\n                &lt;expires&gt;2020-01-31T22:10:08+01:00&lt;/expires&gt;\n                &lt;datapart&gt;\n                    &lt;par n=\"temp\"&gt;6.29&lt;/par&gt;\n                    &lt;par n=\"humrel\"&gt;0.60&lt;/par&gt;\n                    &lt;par n=\"precip\"&gt;0.20&lt;/par&gt;\n                    &lt;par n=\"modviento\"&gt;3&lt;/par&gt;\n                    &lt;par n=\"dirviento\"&gt;190&lt;/par&gt;\n                    &lt;par n=\"timestamp\"&gt;2015-01-22 16:00:00&lt;/par&gt;\n                    &lt;par n=\"entity\"&gt;imei&lt;/par&gt;\n                    &lt;par n=\"scope\"&gt;cell&lt;/par&gt;\n                    &lt;par n=\"idsensor\"&gt;&lt;/par&gt;\n                &lt;/datapart&gt;\n            &lt;/ctxEl&gt;\n            &lt;ctxEl&gt;\n                &lt;contextProvider id=\"MyClient\" v=\"1.2.1\"&gt;&lt;/contextProvider&gt;\n                &lt;entity id=\"123456789123\" type=\"imei\"&gt;&lt;/entity&gt;\n                &lt;scope&gt;cell&lt;/scope&gt;\n                &lt;timestamp&gt;2015-01-21T22:10:18+01:00&lt;/timestamp&gt;\n                &lt;expires&gt;2020-01-31T22:10:08+01:00&lt;/expires&gt;\n                &lt;datapart&gt;\n                    &lt;par n=\"temp\"&gt;6.5&lt;/par&gt;\n                    &lt;par n=\"humrel\"&gt;0.57&lt;/par&gt;\n                    &lt;par n=\"precip\"&gt;0.0&lt;/par&gt;\n                    &lt;par n=\"modviento\"&gt;3.4&lt;/par&gt;\n                    &lt;par n=\"dirviento\"&gt;192&lt;/par&gt;\n                    &lt;par n=\"timestamp\"&gt;2015-01-22 15:00:00&lt;/par&gt;\n                    &lt;par n=\"entity\"&gt;imei&lt;/par&gt;\n                    &lt;par n=\"scope\"&gt;cell&lt;/par&gt;\n                    &lt;par n=\"idsensor\"&gt;&lt;/par&gt;\n                &lt;/datapart&gt;\n            &lt;/ctxEl&gt;\n            &lt;ctxEl&gt;\n                &lt;contextProvider id=\"MyClient\" v=\"1.2.1\"&gt;&lt;/contextProvider&gt;\n                &lt;entity id=\"123456789123\" type=\"imei\"&gt;&lt;/entity&gt;\n                &lt;scope&gt;cell&lt;/scope&gt;\n                &lt;timestamp&gt;2015-01-23T22:10:18+01:00&lt;/timestamp&gt;\n                &lt;expires&gt;2020-01-31T22:10:08+01:00&lt;/expires&gt;\n                &lt;datapart&gt;\n                    &lt;par n=\"temp\"&gt;7.2&lt;/par&gt;\n                    &lt;par n=\"humrel\"&gt;0.47&lt;/par&gt;\n                    &lt;par n=\"precip\"&gt;0.0&lt;/par&gt;\n                    &lt;par n=\"modviento\"&gt;4.4&lt;/par&gt;\n                    &lt;par n=\"dirviento\"&gt;191&lt;/par&gt;\n                    &lt;par n=\"timestamp\"&gt;2015-01-22 14:00:00&lt;/par&gt;\n                    &lt;par n=\"entity\"&gt;imei&lt;/par&gt;\n                    &lt;par n=\"scope\"&gt;cell&lt;/par&gt;\n                    &lt;par n=\"idsensor\"&gt;&lt;/par&gt;\n                &lt;/datapart&gt;\n            &lt;/ctxEl&gt;\n        &lt;/ctxEls&gt;\n    &lt;/contextML&gt;\n</pre>\n\n\n<h3>\n DSE Interwork\n</h3>\n\n<p>\n <img alt=\"\" src=\"images/redmine/DSE_Interwork_Scene_Manager.png\" class=img-responsive />\n</p>\n\n<p>\n The Scene Manager DSE has been designed to work together with the Publish/Subscribe Context Broker \u2013 Context Awareness Platform (CAP). It could be readapted to work with Orion instead of CAP. This DSE has been designed as an interface to the different context producers in an energy management system. In the case of the Madrid trial, it is associated with the different trial subsystems (e.g. weather forecaset service, wireless metering and monitoring system, etc.).\n</p>\n\n<p>\n Third-party applications will manage subscriptions to these producers through the DSE, allowing the selection of the parameters for each subscription, as well as the method for receiving status updates, which will be normally sent as alerts triggered based on specific rules defined when creating the subscription. These rules can consist on a set of threshold values applied to one or more system parameters. This set of values is what defines a \u201cscene\u201d, which is the origin of the name chosen for the DSE. The CAP instance is fed with data from each of the trial modules/subsystems, and each time it receives data, a check is done in order to notify which of the configured scenes have been fulfilled (i.e. the parameters which define the scene match the specified ranges).\n</p>\n\n<p>\n The structure of the Scene Manager DSE is based on a Java application running within the server hosting the DSE, which is in charge of creating the scenes in CAP, because this module cannot read directly from the internal databases of the trial. In parallel, another Java task is responsible for maintaining all subscriptions active, in order to avoid the restriction that CAP imposes on the subscriptions duration (less than 1 day). The DSE inserts the alerts triggered by all the active subscriptions into a database hosted in the same server as the DSE.\n</p>\n\n<p>\n A prototype web application is used for accessing the functionalities of the Scene Manager DSE for the specific use cases of the Madrid trial.\n</p>\n\n\n<h3>\n GE Dependencies\n</h3>\n\n<p>\n The implementation of this DSE is working with an instance of Publish Subscribe Context Broker - Context Awareness Platform v1.4.5\n</p>\n\n\n",
            "Copyright": "\n<p>\n Copyright \u00a9 2015 by FINESCE\n</p>\n\n\n",
            "Glossary": "",
            "References": "",
            "Details": "",
            "Preface": "\n<p>\n Within this document you find a self-contained open specification of the aforementioned Domain Specific Enabler (DSE).\n</p>\n\n<p>\n Please consult the appropriate pages on the\n <a class=\"external\" href=\"http://www.finesce.eu/Trial_Site_Madrid.html\">\n  FINESCE\n </a>\n website in order to understand the complete context of the related FINESCE trials and this DSE.\n</p>\n\n\n",
            "ReutilisedTech": "\n<p>\n The Scene Manager DSE relies on the Publish/Subscribe Context Broker - Context Awareness Platform.\n</p>\n\n\n"
        },
        "Version": "1.0",
        "WP": "",
        "Usage": "\n\n<h3>\n Installation guide\n</h3>\n\n\n\nThe Scene Manager DSE consists of the following modules:\n\t<ul>\n <li>\n  Java process to send scenes as subscriptions to the Publish/Subscribe Context Broker\n </li>\n <li>\n  Database. For the trial implementation a SQL Server 2012 has been used\n </li>\n <li>\n  User interface\n </li>\n</ul>\n\n<p>\n The process which sends the subscriptions consists of a .jar executable file. In order to run it, it is necessary to place the file within the Java installation folder, or modify the environment \"classpath\" where it is located.\n</p>\n\n<p>\n To run the process, it is necessary to run the following statement through the command line:\n <br/>\n <code>\n  java \u2013jar {PATH_TO_FILE}/FinesceJavaTask.jar\n </code>\n</p>\n\n<p>\n The process will be running continuously, checking the database in order to find new subscriptions for sending to the Publish/Subscribe Context Broker, and sending renewal statements to keep alive the scenes previously created.\n</p>\n\n<p>\n For this process to work correctly, there will be a check field in the database that will indicate which subscriptions are new and need to be sent to the Publish/Subscribe Context Broker.\n</p>\n\n<p>\n When a new subscription is created, the concerned trial module is chosen. Thus, in case of an alert the service running in the Publish/Subscribe Context Broker knows which module has triggered it. Alerts information is stored in the database, from which the data can be provided through any API or GUI.\n</p>\n\n<p>\n The DSE uses a database for interacting with GEs. Two tables are used for storing the created subscriptions (FINESCE_Subscriptions and FINESCE_SubscriptionsParams) and the other two for storing the notifications generated by the Publish/Subscribe Context Broker (FINESCE_ctxEls and FINESCE_ctsEls_Data)\n</p>\n\n<p>\n <em>\n  FINESCE_Subscriptions Table\n </em>\n</p>\n\n<p>\n This table keeps information related to all the scenes created. It has a record for each created scene\n <br/>\n Structure:\n</p>\n\n<pre>\n<code>\nCREATE TABLE [dbo].[FINESCE_Subscriptions](\n    [idsubscriptions] [uniqueidentifier] NULL,\n    [name] [nchar](50) NULL,\n    [date] [varchar](50) NULL,\n    [subid] [int] NULL,\n    [date_timestamp] [int] NULL,\n    [idtemp] [int] NULL,\n    [fecharenovacion] [int] NULL,\n    [module] [varchar](50) NULL,\n    [entity_name] [varchar](50) NULL,\n    [entity_id] [varchar](50) NULL\n) ON [PRIMARY]\n</code><br/></pre>\n\n<p>\n Attribute \"subid\" identifies each subscription which has been created in the Publish/Subscribe Context Broker, and it is empty at the beginning. Once a subscription is successfully created, the value of \"subid\" returned using XML is collected, and the field of the database is updated to identify that the subscription has been successfully created.\n</p>\n\n<p>\n Every time the automatic subscriptions renewal process (FinesceJavaTask.jar) is executed, the value of \"fecharenovacion\" with the time instant when the subscription is renewed is updated.\n</p>\n\n<p>\n <em>\n  FINESCE_SubscriptionsParams Table\n </em>\n</p>\n\n<p>\n This table keeps the information related to the different parameters which belong to each scene, linked to the scene through the \u201cidtemp\u201d field.\n</p>\n\n<pre>\n<code>\nCREATE TABLE [dbo].[FINESCE_SubscriptionsParams](\n    [idsubscriptionsparams] [uniqueidentifier] NULL,\n    [subid] [int] NULL,\n    [param_name] [nchar](50) NULL,\n    [param_condition] [nchar](10) NULL,\n    [param_value] [nchar](10) NULL,\n    [param_order] [int] NULL,\n    [date_timestamp] [int] NULL,\n    [idtemp] [int] NULL\n) ON [PRIMARY]\n</code><br/></pre>\n\n<p>\n The attribute \"subid\" identifies each subscription which has been created in the Publish/Subscribe Context Broker GE, and it is empty at the beginning. Once the subscription is successfully created, the value of \"subid\" returned using XML is collected, and the field of the database is updated to identify the created subscription.\n</p>\n\n<p>\n The table contains a record for every parameter defined for each scene. The XML code generated will contain as many elements as records this table has for each scene.\n</p>\n\n<p>\n <em>\n  FINESCE_ctxEls Table\n </em>\n</p>\n\n<p>\n This table contains the records of the notifications received by a customer when an alert has been triggered in a scene. The scene \u201csubid\u201d parameter that triggered this alert is saved too, so that it is possible to keep track of all the alerts generated by every scene.\n</p>\n\n<pre>\n<code>\nCREATE TABLE [dbo].[FINESCE_ctxEls](\n    [regId] [uniqueidentifier] NOT NULL,\n    [regTimeStamp] [datetime] NOT NULL,\n    [subId] [nvarchar](256) NOT NULL,\n    [contextProviderId] [nvarchar](256) NOT NULL,\n    [contextProviderV] [nvarchar](256) NOT NULL,\n    [entityId] [nvarchar](256) NOT NULL,\n    [entityType] [nvarchar](256) NOT NULL,\n    [scope] [nvarchar](256) NOT NULL,\n    [timestamp] [nvarchar](256) NOT NULL,\n    [expires] [nvarchar](256) NOT NULL,\n    [alreadyViewed] [int] NULL,\n CONSTRAINT [PK_FINESCE_ctxEls] PRIMARY KEY CLUSTERED \n(\n</code><br/></pre>\n\n<p>\n <em>\n  FINESCE_ctxEls_Data Table\n </em>\n</p>\n\n<p>\n This table contains all the parameter values of the scene which generated an alert\n</p>\n\n<pre>\n<code>\nCREATE TABLE [dbo].[FINESCE_ctxEls_Data](\n    [regId] [uniqueidentifier] NOT NULL,\n    [parameter] [nvarchar](50) NOT NULL,\n    [value] [nvarchar](50) NOT NULL,\n    [regTimeStamp] [datetime] NOT NULL,\n CONSTRAINT [PK_FINESCE_ctxEls_Data] PRIMARY KEY CLUSTERED \n(\n    [regId] ASC,\n    [parameter] ASC,\n    [value] ASC\n)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]\n) ON [PRIMARY]\n</code><br/></pre>\n\n\n<h3>\n Usage example\n</h3>\n\n<p>\n This section describes how to deploy an instance of the Scene Manager DSE, providing as usage example the case of the FINESCE Madrid trial. In this example the Scene Manager DSE is set to work together with the following components:\n</p>\n\n<p>\n \u2022    An instance of the Publish/Subscribe Context Broker \u2013 Context Awareness Platform (CAP)\n <br/>\n \u2022    Java Schedule task\n <br/>\n \u2022    MySQL database\n <br/>\n \u2022    Graphical User Interface (GUI)\n</p>\n\n<p>\n <ins>\n  Common Steps\n </ins>\n</p>\n\n<p>\n <em>\n  Database Configuration\n </em>\n</p>\n\n<p>\n The first step is the creation of the database where both the active subscriptions and the alerts received from the Publish/Subscribe Context Broker will be stored, and to make this database accessible for web visualization.\n</p>\n\n<p>\n The configuration parameters of the MySQL database in PHP are:\n</p>\n\n<p>\n <code>\n  var $_dbDriver = \"mysql\";\n  <br/>\n  var $_dbHostname = \"XXX.XX.XX.XX\";\n  <br/>\n  var $_dbDatabase = \"MeteoTICs\";\n  <br/>\n  var $_dbUser = \"finesce_scene_manager\";\n  <br/>\n  var $_dbPass = \"*******\";\n  <br/>\n </code>\n</p>\n\n<p>\n The structure of the database table where the subscriptions will be stored is the following:\n</p>\n\n<pre>\nCREATE TABLE FINESCE_subscriptions(\nIdsubscriptions uniqueidentifier,\n      name text NULL,\n      date datetime NULL,\n      subid text NULL,\n      date_timestamp NULL,\n      idtemp text NULL,\n      fecharenovacion datetime NULL,\n      module text NULL,\n      entity_name text NULL,\n      entity_id text NULL\n) ON PRIMARY TEXTIMAGE_ON PRIMARY\n</pre>\n\n<p>\n On the other hand, the parameters of each subscription will be stored in a table with the following structure:\n</p>\n\n<pre>\nCREATE TABLE FINESCE_subscriptionsParams(\nidsubscriptionsparams uniqueidentifier,\nsubid text NULL,\nparam_name text NULL,\nparam_condition text NULL,\nparam_value text NULL,\nparam_order int NULL,\ndate_timestamp datetime NULL,\nidtemp text NULL\n) ON PRIMARY TEXTIMAGE_ON PRIMARY\n</pre>\n\n<p>\n Alerts received will be stored in a table with this structure:\n</p>\n\n<pre>\nCREATE TABLE FINESCE_ctxEls(\nregId uniqueidentifier,\nregTimeStamp datetime NULL,\nsubId text NULL,\ncontextProviderId text NULL,\ncontextProviderV text NULL,\nentityId text NULL,\nentityType text NULL,\nscope text NULL,\ntimestamp datetime NULL,\nexpires datetime NULL,\nalreadyViewed text NULL\n) ON PRIMARY TEXTIMAGE_ON PRIMARY\n</pre>\n\n<p>\n And finally, the parameters of each received alert will be stored in a table with the following structure:\n</p>\n\n<pre>\nCREATE TABLE FINESCE_ctxEls_Data(\nregId uniqueidentifier,\nparameter text NULL,\nvalue text NULL,\nregTimeStamp datetime NULL\n) ON PRIMARY TEXTIMAGE_ON PRIMARY\n</pre>\n\n<p>\n When an alert is created, a new record is stored in the table FINESCE_subscriptions, and each parameter involved in the alert will have a corresponding record in FINESCE_subscriptionsParams.\n</p>\n\n<p>\n Every time that the Publish/Subscribe Context Broker generates an alert, a new record is stored in the table FINECE_ctxEls, while each parameter of the entity (alert) will have a new record in FINESCE_ctxEls_Data.\n</p>\n\n<p>\n <em>\n  Publish/Subscribe Context Broker (CAP) Configuration\n </em>\n</p>\n\n<p>\n This usage example utilizes an already deployed instance of the Publish/Subscribe Context Broker. In order to create rules in it, the CAP administrator (Sergio Rolando from Telecom Italia: sergio.rolando[at]guest.telecom.italia.it or Boris Moltchanov boris.moltchanov[at]telecomitalia.it)  has to be contacted requesting that an entity is enabled for that purpose.\n</p>\n\n<p>\n Once this is done, the creation of rules is done in the following way:\n</p>\n\n<pre>\nURL:         http://pubsub.testbed.fi-ware.eu/CB/ContextBroker/getContextQL\nMethod:    POST\nContent-Type:     application/xml\n\n&lt;contextQL&gt;\n    &lt;ctxQuery&gt;\n        &lt;action type=\"SUBSCRIBE\"/&gt;\n        &lt;entity&gt;entity_name|entity_id&lt;/entity&gt;\n        &lt;scope&gt;scope_name&lt;/scope&gt;\n        &lt;conds&gt;\n            &lt;cond type=\"ONVALUE\"&gt;\n                &lt;logicalop=\"AND\"&gt;\n                    &lt;constraint op=\"LT\" param=\"scope_name.param1\" value=\"16\"/&gt;\n                    &lt;constraint op=\"GT\" param=\"scope_name.param2\" value=\"70\"/&gt;\n                &lt;/logical&gt;\n            &lt;/cond&gt;\n        &lt;/conds&gt;\n    &lt;/ctxQuery&gt;\n&lt;/contextQL&gt;\n</pre>\n\n<p>\n <em>\n  Java Schedule task configuration\n </em>\n</p>\n\n<p>\n For a correct operation, the Scene Manager DSE needs that the process FinesceJavaTask.jar is being executed. For doing so, it is necessary to have Java version 7 installed in the server, and execute the process in the following way:\n <br/>\n <code>\n  java \u2013jar FinesceJavaTask.jar\n </code>\n</p>\n\n<p>\n This process is in charge of sending the subscriptions created through the Publish/Subscribe Context Broker, and of maintaining them active once they are created.\n</p>\n\n<p>\n <em>\n  New data\n </em>\n</p>\n\n<p>\n Every module (i.e. every system/subsystem where we want to create alert subscriptions) that has to be connected must be able to send data to the Publish/Subscribe Context Broker through a XML format like the following:\n</p>\n\n<pre>\nURL:         http://pubsub.testbed.fi-ware.eu/CB/ContextBroker/contextUpdate\nMethod:    POST\nContent-Type:     application/xml\n\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;contextML xmlns=\"http://ContextML/1.7\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"  xsi:schemaLocation=\"http://ContextML/1.7 ../ContextML-1.7.xsd\"&gt;\n    &lt;ctxEls&gt;\n        &lt;ctxEl&gt;\n            &lt;contextProvider id=\"myclient_id\" v=\"1.2.1\"/&gt;\n            &lt;entity id=\"entity_id\" type=\"imei\"/&gt;\n            &lt;scope&gt;scope_name&lt;/scope&gt;\n            &lt;timestamp&gt;datetime&lt;/timestamp&gt;\n            &lt;expires&gt;datetime&lt;/expires&gt;\n            &lt;dataPart&gt;\n                &lt;par n=\"param1_name\"&gt;param1_value&lt;/par&gt;\n                &lt;par n=\"param2_name\"&gt;param2_value&lt;/par&gt;\n                &lt;par n=\"param3_name\"&gt;param3_value&lt;/par&gt;\n            &lt;/dataPart&gt;\n        &lt;/ctxEl&gt;\n    &lt;/ctxEls&gt;\n&lt;/contextML&gt;\n</pre>\n\n<p>\n In order to check the correct operation of the Publish/Subscribe Context Broker, the following instruction can be executed, replacing the name of the attribute, and checking that with every data sending done from the connected modules, the attribute values in the response are updated, since the Context Broker only stores the last value received.\n</p>\n\n<pre>\nURL:         http://pubsub.testbed.fi-ware.eu/CB/ContextBroker/getContext?\nentity=entity_name|entity_id&amp;scopeList=scope_name\n\nResponse:\n&lt;contextML xmlns=\"http://ContextML/1.7\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://ContextML/1.7 http://contextml.tilab.com/ContextML-1.7.xsd\"&gt;\n    &lt;timeRef&gt;2015-09-02T13:09:52+03:00&lt;/timeRef&gt;\n    &lt;ctxEls&gt;\n        &lt;ctxEl&gt;\n            &lt;contextProvider id=\"MyClient\" v=\"1.2.1\"/&gt;\n            &lt;entity id=\"123456789123\" type=\"imei\"/&gt;\n            &lt;scope&gt;cell&lt;/scope&gt;\n            &lt;timestamp&gt;2015-09-02T11:10:05+02:00&lt;/timestamp&gt;\n            &lt;expires&gt;2020-01-01T00:59:45+02:00&lt;/expires&gt;\n            &lt;dataPart&gt;\n                &lt;par n=\"dirviento\"&gt;196&lt;/par&gt;\n                &lt;par n=\"humrel\"&gt;0,45&lt;/par&gt;\n                &lt;par n=\"modviento\"&gt;1,8&lt;/par&gt;\n                &lt;par n=\"precip\"&gt;0&lt;/par&gt;\n                &lt;par n=\"temp\"&gt;23,42&lt;/par&gt;\n                &lt;par n=\"cc\"&gt;0,11&lt;/par&gt;\n            &lt;/dataPart&gt;\n        &lt;/ctxEl&gt;\n    &lt;/ctxEls&gt;\n&lt;/contextML&gt;\n</pre>\n\n<p>\n <em>\n  Visualization configuration\n </em>\n</p>\n\n<p>\n A web page is used as GUI for displaying the alerts generated by each of the created subscriptions. This tool is fed with the database where the Schedule task dumps the data of the alerts sent by the Publish/Subscribe Context Broker.\n</p>\n\n<p>\n In order to deploy this GUI, there must be installed an Apache server with PHP and MySQL. Packages such as wamp are recommended in order to facilitate the GUI deployment.\n</p>\n\n\n",
        "Terms and Conditions": "\n<p>\n This DSE is provided as open source under the Apache2 license. Please check the specific terms and conditions linked to this open source license at\n <a class=\"external\" href=\"http://www.apache.org/licenses/LICENSE-2.0\">\n  http://www.apache.org/licenses/LICENSE-2.0\n </a>\n .\n</p>\n\n\n",
        "wiki_attachments": [
            "/redmine/attachments/download/2156/SceneManagerDSE.png",
            "/redmine/attachments/download/2179/SceneManagerDataModel.png",
            "/redmine/attachments/download/2635/FinesceJavaTask.zip",
            "/redmine/attachments/download/2879/DSE_Interwork_Scene_Manager.png"
        ],
        "Open Source": "",
        "Contact Person": "\n<p>\n Jos\u00e9 Luis Bur\u00f3n\n <br/>\n ACCIONA Infraestructuras\n <br/>\n <a class=\"email\" href=\"mailto:joseluis.buron.martinezREMOVE-NO-SPAM@acciona.com\">\n  joseluis.buron.martinezREMOVE-NO-SPAM@acciona.com\n </a>\n</p>\n\n\n",
        "Overview": "\n\n<h3>\n What you get\n</h3>\n\n<p>\n Scene Manager DSE is a module which allows client applications (e.g. mobile apps for facility managers developed by third parties) to subscribe to customized alerts associated to the parameters of a building energy management/monitoring system. Alerts are triggered based on predefined \u2018scenes\u2019 which can be created by the client. These scenes are a combination of ranges of values for different parameters of the building system. If the conditions set in the scene are fulfilled, then an alert is triggered.\n</p>\n\n\n\nThe reference implementation provided shows the application of the DSE for managing the subscription to customized alerts associated to the parameters of different systems and services integrated in the FINESCE Madrid trial, namely:\n\t<ul>\n <li>\n  Weather forecast service\n </li>\n <li>\n  Wireless monitoring and metering network\n </li>\n <li>\n  Building energy generation and storage management system\n </li>\n <li>\n  Building Management System, remotely controlled through a proprietary platform called Building Control Centre.\n </li>\n</ul>\n\n<p>\n DSE Version: 1.0\n</p>\n\n\n<h3>\n Why to get it\n</h3>\n\n<p>\n A reference implementation of a module for managing subscriptions to customized alerts associated to building system parameters handled through the Publish/Subscribe Context Broker GE. The current implementation is based on Context Awareness Platform, but it can be modified to use it with Orion.\n</p>\n\n\n<h3>\n Target Usage\n</h3>\n\n<p>\n This DSE aims to help application developers who need to give end users an efficient access to data from building energy management/monitoring systems (or any other monitoring system in other domains). Customized alerts are an easy way of providing end users with information relevant for them.\n</p>\n\n\n",
        "Downloads": "\n<table class=\"themed\">\n <tr class=\"top\">\n  <td>\n   Location\n  </td>\n  <td>\n   Revision\n  </td>\n  <td>\n   Release Date\n  </td>\n </tr>\n <tr>\n  <td>\n   <a class=\"external\" href=\"files/FinesceJavaTask.zip\">\n    FinesceJavaTask.zip\n   </a>\n  </td>\n  <td>\n   version=1.0\n  </td>\n  <td>\n   Wed Jun 24th 14:35:03 CEST 2015\n  </td>\n </tr>\n</table>\n\n<p>\n The ZIP file provided includes both the executable .jar file and the source code.\n</p>\n\n\n",
        "Instances": "\n<p>\n An instance of this DSE\u2019s reference implementation runs as a part of the trial and is not publicly accessible.\n</p>\n\n\n"
    }
]