[
    {
        "Last Update": "2015-09-04",
        "Target Usage": "",
        "Name": "Modbus Connector (ModConn)",
        "Short Description": "",
        "Documentation": {
            "Description": "\n<p>\n Gathering of the energy consumption data of the machine tools is done by power measuring devices such as a Siemens Sentron PAC 3200. The collected data is first stored locally on a record carrier to provide it for other systems. For encapsulating the energy measurement system websockets were chosen on a technical layer. The use of web based standards such as RFC6455 for websockets holds the advantage of significant lower roundtrip latency times and enables bidirectional communication compared to SOAP or REST. Furthermore, the communication can be performed event based, which is especially useful in an production environment. The same interface can be used for event based status monitoring by a Manufacturing Execution System (MES) as well as long-term monitoring applications. Furthermore, communication over websocket allows for a play &amp; play interface for integrating any higher level systems.\n</p>\n\n\n<h3>\n Interwork with DSEs and GEs\n</h3>\n\n<p>\n The Modbus Connector is a proprietary component which can gather messages being communicated on a local shopfloor network with the Modbus protocol and translate those to NGSI to be consumed by the Orion Context Broker. An overview over an exemplary architecture is given in the diagram below.\n</p>\n\n<p>\n <img alt=\"Same as FINESCE_EvSi_Sample-Arch\" src=\"images/redmine/FINESCE_ModConn_Sample-Arch.png\" title=\"Same as FINESCE_EvSi_Sample-Arch\" class=img-responsive />\n</p>\n\n<p>\n The Modbus Connector establishes and unidirectional connection to the local instance of Orion to forward all events in appropriate NGSI format.\n</p>\n\n\n",
            "Copyright": "\n<p>\n Copyright \u00a9 2015 by FINESCE\n</p>\n\n\n",
            "Glossary": "\n<ul>\n <li>\n  MES: Manufacturing Execution System\n </li>\n <li>\n  REST: Representational State Transfer\n </li>\n <li>\n  SOAP: Simple Object Access Protocol\n </li>\n</ul>\n\n\n",
            "References": "\n<ul>\n <li>\n  RFC6455:\n  <a class=\"external\" href=\"https://tools.ietf.org/html/rfc6455\">\n   https://tools.ietf.org/html/rfc6455\n  </a>\n </li>\n</ul>\n\n\n",
            "Details": "",
            "Preface": "\n<p>\n Within this document you find a self-contained open specification of the aforementioned FINESCE result.\n</p>\n\n<p>\n Please consult the appropriate pages on the\n <a class=\"external\" href=\"http://www.finesce.eu/Trial_Site_Aachen.html\">\n  FINESCE\n </a>\n website in order to understand the complete context of the related FINESCE trials and this document.\n</p>\n\n\n",
            "ReutilisedTech": "\n<p>\n The Modbus Connector is proprietary software written in C#.Net, but utilises established industry standards and norms for external interfaces.\n</p>\n\n<ul>\n <li>\n  <a class=\"external\" href=\"http://catalogue.fi-ware.org/enablers/publishsubscribe-context-broker-orion-context-broker\">\n   Orion Context Broker\n  </a>\n  \u2014 v4.1 or higher \u2014 Orion is on the northbound connection of ModConn\n </li>\n <li>\n  <a class=\"external\" href=\"https://de.wikipedia.org/wiki/Modbus\">\n   Modbus/TCP\n  </a>\n  \u2014 as specified in IEC 61158 \u2014 Modbus is the southbound interface to the machines and sensors\n </li>\n</ul>\n\n\n"
        },
        "Version": "1.1 \u2014 communication with Orion",
        "WP": "",
        "Usage": "\n\n<h3>\n Usage Examples\n</h3>\n\n<p>\n The use case for ModConn is using a local Orion instance to gather local events of shop floor equipment like machines, robots, or sensors. As Orion cannot communicate directly with this equipment via Modbus, this additional component is required as protocol adapter or glue-ware.\n</p>\n\n\n",
        "Terms and Conditions": "\n<p>\n An instance of this reference implementation runs as a part of the trial and is not publicly accessible.\n</p>\n\n\n",
        "wiki_attachments": [
            "/redmine/attachments/download/1414/WP3-Factory_ModConn-DSE_Overview.png",
            "/redmine/attachments/download/2885/FINESCE_ModConn_Sample-Arch.png"
        ],
        "Open Source": "",
        "Contact Person": "\n<p>\n Julian Krenge\n <br/>\n FIR at RWTH Aachen University\n <br/>\n <a class=\"email\" href=\"mailto:Julian.KrengeREMOVE-NO-SPAM@fir.rwth-aachen.de\">\n  Julian.KrengeREMOVE-NO-SPAM@fir.rwth-aachen.de\n </a>\n</p>\n\n\n",
        "Overview": "\n<p>\n Main purpose of the ModConn is the integration of shopfloor infrastructure with a local instance of the GE Orion Context Broker. It was first investigated, whether the GE Protocol Adapter might be sufficient to perform this task, but as it is not tailored for Modbus, the individual solution was chosen. The Modbus Connector consists of two components, in order to allow for the segregation of the shopfloor Ethernet and the enterprise Ethernet. There is one component for each side of this gap.\n</p>\n\n<p>\n In this context, ModConn can be understood as protocol adapter supporting data gathering of local shopfloor equipment.\n</p>\n\n<p>\n <img alt=\"\" src=\"images/redmine/WP3-Factory_ModConn-DSE_Overview.png\" class=img-responsive />\n</p>\n\n<p>\n As shown in the image above, the websocket-server component is located within the shop floor network and communicates with the websocket-client component. The websocket-server is device running locally directly within in the dedicated shopfloor network to communicate over Modbus with the machines and sensor devices. I communicates with the websocket-client in the normal enterprise network, where the Orion instance is running. A broader overview over an deployment architecture is given in 'DSE Interwork' under 'Details'.\n</p>\n\n\n",
        "Downloads": "\n<p>\n No downloads are available for this result.\n</p>\n\n\n",
        "Instances": "\n<p>\n An instance of this reference implementation runs as a part of the trial and is not publicly accessible.\n</p>\n\n\n"
    }
]