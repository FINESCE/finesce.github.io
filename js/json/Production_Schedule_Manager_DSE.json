[
    {
        "Target Usage": "\n<ul>\n <li>\n  Provide production schedules with historical, actual and forecasted data\n </li>\n <li>\n  Data handler between different components\n </li>\n</ul>\n\n\n",
        "Name": "Production Schedule Manager DSE",
        "Short Description": "",
        "Documentation": {
            "Description": "\n<p>\n The Production Schedule Manager pre-processes production plan data. It gets production data of the factory grouped by consuming power. This enables the planning of energy generation and consumption balance. The energy demand data according to the production steps will be used in order to generate a set of possible variations for the electrical energy load profiles.\n <br/>\n The information can be accessed via services.\n</p>\n\n<p>\n <strong>\n  Combining the DSEs Generation Schedule Manager and Production Schedule Manager\n </strong>\n</p>\n\n<p>\n Depending on the use case and the access rights the data structure for the energy generation and the energy consumption can be separated or combined to provide easier access. This leads to a homogenous approach for the API allowing the access to the DSE. The combination can be achieved by joining the data structure under the same base directory, thus enabling a joined data access also considered in the implementation of the API. The relevant requests are able to handle the combined data structure.\n <br/>\n In the definition of the API, Data Access, below the combined access to the energy generation and energy consumption data is indicated by the section of the request responses marked by the key word \u201cgeneration\u201d.\n</p>\n\n<p>\n <strong>\n  Data Structure\n </strong>\n</p>\n\n<p>\n In the following the resulting structure, which allows for addressing and providing specific data, is described.\n</p>\n\n<p>\n The energy consumption side is composed of components, which consume energy. The data for each component is provided by values for equidistant time intervals.\n</p>\n\n<p>\n This leads to the following overall structure for the data of the components.\n</p>\n\n<p>\n Consumption\n</p>\n\n<blockquote>\n <p>\n  Consumption-component_1\n  <br/>\n  Consumption-component_2\n  <br/>\n  \u2026.\n  <br/>\n  Consumption-component_N\n </p>\n</blockquote>\n\n<p>\n Each component has data for measured values and for calculated values. Calculated values may be for example for forecasted energy consumption. Furthermore the data is grouped by day, so that the values for a component of measured or calculated data for one day is combined.\n</p>\n\n<p>\n Component_A\n</p>\n\n<blockquote>\n <p>\n  measurement\n </p>\n <blockquote>\n  <p>\n   day_1\n   <br/>\n   day_2\n   <br/>\n   \u2026.\n   <br/>\n   day_n\n  </p>\n </blockquote>\n <p>\n  calculation\n </p>\n <blockquote>\n  <p>\n   day_1\n   <br/>\n   day_2\n   <br/>\n   \u2026.\n   <br/>\n   day_m\n  </p>\n </blockquote>\n</blockquote>\n\n<p>\n The data for a component is structured in values, which are provided for an equidistant time interval. The data for one point of time consists of several values and is represented by one line of values that are separated by comma. The end of the line is marked by a semicolon.\n</p>\n\n<p>\n The line consists of the values, which are measured or calculated for the energy like e.g. an amount and a factor for further calculations and processing, both depending on the electric metering interfaces of the component.\n</p>\n\n<p>\n The first line of data is the headline describing the contents of each column, so that with the information of the headline the value of the respective column can be interpreted and accordingly further processed. The headline is followed by the lines of the values for each point of time, a line giving the data for one point of time and the lines representing the point of time given in consecutive order of time. The number of lines of values for one day depends on the equidistant time interval, which defines the amount of time between the values of consecutive lines.\n</p>\n\n<p>\n There is data for each day for which data is provided for a component. The data has the format:\n</p>\n\n<p>\n Headline:    &lt;Description  column_1&gt;,\u2026\u2026.,&lt;Description column_n&gt;;\n <br/>\n Data Line_1:    &lt;value_1&gt;,\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026..,&lt;value_n&gt;;\n <br/>\n \u2026..\n <br/>\n Data Line_N:    &lt;value_1&gt;,\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026..,&lt;value_n&gt;;\n</p>\n\n<p>\n The resulting structure, as shown below, allows for accessing and providing specific data for a specific component and a specific day in a uniform way for all components.\n</p>\n\n<p>\n Consumption\n</p>\n\n<blockquote>\n <p>\n  Consumption-component_1\n </p>\n <blockquote>\n  <blockquote>\n   <p>\n    measurement\n   </p>\n   <blockquote>\n    <blockquote>\n     <p>\n      day_1\n      <br/>\n      \u2026.\n      <br/>\n      day_n\n     </p>\n    </blockquote>\n   </blockquote>\n   <p>\n    calculation\n   </p>\n   <blockquote>\n    <blockquote>\n     <p>\n      day_1\n      <br/>\n      \u2026.\n      <br/>\n      day_m\n     </p>\n    </blockquote>\n   </blockquote>\n  </blockquote>\n </blockquote>\n <p>\n  \u2026.\n  <br/>\n  Consumption-component_N\n </p>\n</blockquote>\n\n<p>\n \u2026.\n</p>\n\n<p>\n By specifying each element in the hierarchy the data is uniquely described and can be accessed.\n</p>\n\n<p>\n <strong>\n  Data Access\n </strong>\n</p>\n\n<p>\n According to the structure of the data described above the data of the components is structured by day and thus can be accessed per day. Data access is allowed for reading or writing. The overall structure of the data of all components is designed in a way that it can be accessed in a uniform way.\n</p>\n\n<p>\n In this implementation the access to the data is handled on a user basis. In the initial registration to the system a user gets an authentication-id and password with which he authenticates himself to the system for a request or a series of requests.\n</p>\n\n<p>\n In the authentication process to initiate requests the user gets an authorisation-id for the requests. This id is then given as a parameter to the requests. The authorisation and authentication of users is not part of the DSE. Therefore a basic implementation of the access rights is used.\n</p>\n\n<p>\n For each user there is a list of components to which he is granted access, more specifically, which he is allowed to read or write. The list comprises a subset of the list of components for energy consumption. Out of this list of components the user can request data for a component for a specific day, which are measured or calculated.\n</p>\n\n\n\nTo access the data the component, measurement or calculation, the date and the id for user authorisation must be specified. This way the data as described in the structure above is uniquely specified and can be accessed. The process for a user to access data for energy consumption includes the following steps. \n\t<ul>\n <li>\n  User authentication\n </li>\n <li>\n  Getting the list of components for which access is allowed for the user including the information whether it may be read or written.\n </li>\n <li>\n  Getting the list of available data for a component\n </li>\n <li>\n  Accessing the specified data\n </li>\n</ul>\n\n<p>\n First the user authenticates himself to the system using his authentication-id and password. An authorisation-id is sent back for subsequent requests of the user. Each request must be authorised by giving the authorisation-id as a parameter. Next, using the authorisation-id the user requests the list of components he is granted access to. The list contains a unique identification for the component and the information whether the data may be read or written. The unique identification for the component is used in further requests to get information for this component.\n</p>\n\n<p>\n In the next step the available data for a component is requested. The returned list contains the dates for which data is available each for measurement and calculation. This means for each element of the list data exists for the given day. The list gives a unique reference to this data with which it can be accessed in subsequent requests.\n</p>\n\n<p>\n Following these steps the user can request to access the required data of the components. In the requests to access the data the reference to the data is given and the data for the specified date is returned. There are requests for reading and writing the data. The requests are constructed in a uniform way to allow for a consistent use.\n</p>\n\n<p>\n <strong>\n  Interface Description\n </strong>\n</p>\n\n<p>\n The access to the system is implemented in a RESTful API. The application is compliant with the REST conventions. It performs the requested service as a response to GET or POST requests as stated in the description of the interface to the specific URLs. The input data and the responses of this service are by default provided in JSON format.\n</p>\n\n<p>\n <ins>\n  User authentication\n </ins>\n</p>\n\n<p>\n This service authenticates a user to the system.\n</p>\n\n<p>\n authenticateUser\n</p>\n\n<table class=\"themed\">\n <tr class=\"top\">\n  <td>\n   function name\n  </td>\n  <td>\n   authenticateUser\n  </td>\n </tr>\n <tr>\n  <td>\n   description\n  </td>\n  <td>\n   Authenticates a user to the system\n  </td>\n </tr>\n <tr>\n  <td>\n   function prototype\n  </td>\n  <td>\n   String authenticateUser ()\n  </td>\n </tr>\n <tr>\n  <td>\n   parameter\n  </td>\n  <td>\n   authentication-id, password\n  </td>\n </tr>\n <tr>\n  <td>\n   return type\n  </td>\n  <td>\n   String\n  </td>\n </tr>\n <tr>\n  <td>\n   return description\n  </td>\n  <td>\n   Unique authorisation-id\n  </td>\n </tr>\n <tr>\n  <td>\n   REST Status Codes\n  </td>\n  <td>\n   200: OK\n  </td>\n </tr>\n <tr>\n  <td>\n  </td>\n  <td>\n   404: Not Found\n  </td>\n </tr>\n <tr>\n  <td>\n  </td>\n  <td>\n   500: Internal Server Error\n  </td>\n </tr>\n <tr>\n  <td>\n  </td>\n  <td>\n   503: Service Unavailable\n  </td>\n </tr>\n</table>\n\n<p>\n <ins>\n  URL\n </ins>\n <br/>\n https: // &lt;apibaseurl&gt; /authentication?Authentication-ID=&lt;authentication-id&gt;&amp;UserPassword=&lt;password&gt;\n</p>\n\n<p>\n HTTP request method: POST\n</p>\n\n<p>\n <ins>\n  Response\n </ins>\n <br/>\n <em>\n  {\n  <br/>\n  \"authorisation-id\": \"&lt;authorisation-id\"&gt;\n  <br/>\n  }\n </em>\n</p>\n\n<p>\n <ins>\n  Get user list of components\n </ins>\n</p>\n\n<p>\n This service delivers the list of components for a user to which he is granted access.\n</p>\n\n<p>\n getUserComponentList\n</p>\n\n<table class=\"themed\">\n <tr class=\"top\">\n  <td>\n   function name\n  </td>\n  <td>\n   getUserComponentList\n  </td>\n </tr>\n <tr>\n  <td>\n   description\n  </td>\n  <td>\n   gets the list of allowed components for a user\n  </td>\n </tr>\n <tr>\n  <td>\n   function prototype\n  </td>\n  <td>\n   String getUserComponentList ()\n  </td>\n </tr>\n <tr>\n  <td>\n   parameter\n  </td>\n  <td>\n   User authorisation-id\n  </td>\n </tr>\n <tr>\n  <td>\n   return type\n  </td>\n  <td>\n   String\n  </td>\n </tr>\n <tr>\n  <td>\n   return description\n  </td>\n  <td>\n   List of components\n  </td>\n </tr>\n <tr>\n  <td>\n   REST Status Codes\n  </td>\n  <td>\n   200: OK\n  </td>\n </tr>\n <tr>\n  <td>\n  </td>\n  <td>\n   404: Not Found\n  </td>\n </tr>\n <tr>\n  <td>\n  </td>\n  <td>\n   500: Internal Server Error (:= data is not accessible)\n  </td>\n </tr>\n <tr>\n  <td>\n  </td>\n  <td>\n   503: Service Unavailable\n  </td>\n </tr>\n</table>\n\n<p>\n <ins>\n  URL\n </ins>\n <br/>\n https: // &lt;apibaseurl&gt; /UserComponentLists?authorisation-id=&lt;authorisation-id&gt;\n</p>\n\n<p>\n HTTP request method: GET\n</p>\n\n<p>\n <ins>\n  Response\n </ins>\n</p>\n\n<p>\n <em>\n  {\n  <br/>\n  \"consumption\": [\n </em>\n <br/>\n <em>\n  {\n  <br/>\n  \"component\": \"&lt;component-id&gt;\",\n  <br/>\n  \"url\": \"&lt;apibaseurl&gt;/consumption/&lt;component-id&gt;\",\n  <br/>\n  \"access\": \"&lt;access-right&gt;\"\n  <br/>\n  },\n </em>\n <br/>\n \u2026\u2026..\n <br/>\n <em>\n  ],\n </em>\n <br/>\n <em>\n  \"generation\": [\n </em>\n <br/>\n <em>\n  {\n  <br/>\n  }\n </em>\n ,\n <br/>\n \u2026\u2026..\n <br/>\n <em>\n  ]\n  <br/>\n  }\n  <br/>\n </em>\n</p>\n\n<p>\n There are the following access rights to the data of a component\n</p>\n\n<table class=\"themed\">\n <tr class=\"top\">\n  <td>\n   <strong>\n    Access right\n   </strong>\n  </td>\n  <td>\n   <strong>\n    Abbreviation\n   </strong>\n  </td>\n </tr>\n <tr>\n  <td>\n   read\n  </td>\n  <td>\n   r\n  </td>\n </tr>\n <tr>\n  <td>\n   write\n  </td>\n  <td>\n   w\n  </td>\n </tr>\n <tr>\n  <td>\n   read, write\n  </td>\n  <td>\n   rw\n  </td>\n </tr>\n</table>\n\n<p>\n <ins>\n  Get list of available data for a component\n </ins>\n</p>\n\n<p>\n This service delivers the list of dates of available data for a component each for measurement and calculation.\n</p>\n\n<p>\n getDataList\n</p>\n\n<table class=\"themed\">\n <tr class=\"top\">\n  <td>\n   function name\n  </td>\n  <td>\n   getDataList\n  </td>\n </tr>\n <tr>\n  <td>\n   description\n  </td>\n  <td>\n   gets the list of available data for a component\n  </td>\n </tr>\n <tr>\n  <td>\n   function prototype\n  </td>\n  <td>\n   String getDataList ()\n  </td>\n </tr>\n <tr>\n  <td>\n   parameter\n  </td>\n  <td>\n   Component-id, user authorisation-id\n  </td>\n </tr>\n <tr>\n  <td>\n   return type\n  </td>\n  <td>\n   String\n  </td>\n </tr>\n <tr>\n  <td>\n   return description\n  </td>\n  <td>\n   List of dates for measurement and calculation\n  </td>\n </tr>\n <tr>\n  <td>\n   REST Status Codes\n  </td>\n  <td>\n   200: OK\n  </td>\n </tr>\n <tr>\n  <td>\n  </td>\n  <td>\n   404: Not Found\n  </td>\n </tr>\n <tr>\n  <td>\n  </td>\n  <td>\n   500: Internal Server Error\n  </td>\n </tr>\n <tr>\n  <td>\n  </td>\n  <td>\n   503: Service Unavailable\n  </td>\n </tr>\n</table>\n\n<p>\n https: // &lt;apibaseurl&gt; /consumption/&lt;component-id&gt;/DataLists?authorisation-id=&lt;authorisation-id&gt;\n</p>\n\n<p>\n HTTP request method: GET\n</p>\n\n<p>\n <ins>\n  Response\n </ins>\n <br/>\n <em>\n  {\n  <br/>\n  \"measurement\": [\n </em>\n <br/>\n <em>\n  {\n  <br/>\n  \"date\": \"&lt;date&gt;\",\n  <br/>\n  \"url\": \"&lt;apibaseurl&gt;/consumption/&lt;component-id&gt;/measurement/&lt;date&gt;\"\n  <br/>\n  },\n </em>\n <br/>\n \u2026\u2026..\n <br/>\n <em>\n  ],\n </em>\n <br/>\n <em>\n  \"calculation\": [\n </em>\n <br/>\n <em>\n  {\n  <br/>\n  \"date\": \"&lt;date&gt;\",\n  <br/>\n  \"url\": \"&lt;apibaseurl&gt;/consumption/&lt;component-id&gt;/calculation/&lt;date&gt;\"\n  <br/>\n  },\n </em>\n <br/>\n \u2026\u2026..\n <br/>\n <em>\n  ]\n  <br/>\n  }\n  <br/>\n </em>\n</p>\n\n<p>\n <ins>\n  Access data for a component\n </ins>\n</p>\n\n<p>\n This service delivers the data of a component for the specified date and data type, i.e. for calculation or measurement.\n</p>\n\n<p>\n readData\n</p>\n\n<table class=\"themed\">\n <tr class=\"top\">\n  <td>\n   function name\n  </td>\n  <td>\n   readData\n  </td>\n </tr>\n <tr>\n  <td>\n   description\n  </td>\n  <td>\n   gets the data for a component\n  </td>\n </tr>\n <tr>\n  <td>\n   function prototype\n  </td>\n  <td>\n   String readData ()\n  </td>\n </tr>\n <tr>\n  <td>\n   parameter\n  </td>\n  <td>\n   Component-id, data-type, date, user authorisation-id\n  </td>\n </tr>\n <tr>\n  <td>\n   return type\n  </td>\n  <td>\n   String\n  </td>\n </tr>\n <tr>\n  <td>\n   return description\n  </td>\n  <td>\n   Data of a component for the specified date for measurement or calculation\n  </td>\n </tr>\n <tr>\n  <td>\n   REST Status Codes\n  </td>\n  <td>\n   200: OK\n  </td>\n </tr>\n <tr>\n  <td>\n  </td>\n  <td>\n   404: Not Found\n  </td>\n </tr>\n <tr>\n  <td>\n  </td>\n  <td>\n   500: Internal Server Error (:= data is not accessible)\n  </td>\n </tr>\n <tr>\n  <td>\n  </td>\n  <td>\n   503: Service Unavailable\n  </td>\n </tr>\n</table>\n\n<p>\n <ins>\n  URL\n </ins>\n <br/>\n https: // &lt;apibaseurl&gt; /consumption/&lt;component-id&gt;/measurement/&lt;date&gt;?authorisation-id=&lt;authorisation-id&gt;\n <br/>\n https: // &lt;apibaseurl&gt; /consumption/&lt;component-id&gt;/calculation/&lt;date&gt;?authorisation-id=&lt;authorisation-id&gt;\n</p>\n\n<p>\n HTTP request method: GET\n</p>\n\n<p>\n <ins>\n  Response\n </ins>\n <br/>\n <em>\n  {\n  <br/>\n  \"data\": \"&lt;Description  column_1&gt;,\u2026\u2026.,&lt;Description column_n&gt;;\n  <br/>\n  &lt;value_1&gt;,\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026..,&lt;value_n&gt;;\n  <br/>\n  \u2026..\n  <br/>\n  &lt;value_m+1&gt;,\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026..,&lt;value_m+n&gt;; \"\n  <br/>\n  }\n  <br/>\n </em>\n</p>\n\n<p>\n This service writes the data of a component for the specified date and data type, i.e. for calculation or measurement.\n</p>\n\n<p>\n writeData\n</p>\n\n<table class=\"themed\">\n <tr class=\"top\">\n  <td>\n   function name\n  </td>\n  <td>\n   writeData\n  </td>\n </tr>\n <tr>\n  <td>\n   description\n  </td>\n  <td>\n   writes data for a component\n  </td>\n </tr>\n <tr>\n  <td>\n   function prototype\n  </td>\n  <td>\n   String writeData ()\n  </td>\n </tr>\n <tr>\n  <td>\n   parameter\n  </td>\n  <td>\n   Component-id, data-type, date, data, user authorisation-id\n  </td>\n </tr>\n <tr>\n  <td>\n   return type\n  </td>\n  <td>\n   String\n  </td>\n </tr>\n <tr>\n  <td>\n   return description\n  </td>\n  <td>\n   url to the written data\n  </td>\n </tr>\n <tr>\n  <td>\n   REST Status Codes\n  </td>\n  <td>\n   200: OK\n  </td>\n </tr>\n <tr>\n  <td>\n  </td>\n  <td>\n   404: Not Found\n  </td>\n </tr>\n <tr>\n  <td>\n  </td>\n  <td>\n   500: Internal Server Error (:= data is not accessible)\n  </td>\n </tr>\n <tr>\n  <td>\n  </td>\n  <td>\n   503: Service Unavailable\n  </td>\n </tr>\n</table>\n\n<p>\n <ins>\n  URL\n </ins>\n <br/>\n https: // &lt;apibaseurl&gt; /consumption/&lt;component-id&gt;/measurement/&lt;date&gt;?authorisation-id=&lt;authorisation-id&gt;\n <br/>\n https: // &lt;apibaseurl&gt; /consumption/&lt;component-id&gt;/calculation/&lt;date&gt;?authorisation-id=&lt;authorisation-id&gt;\n</p>\n\n<p>\n HTTP request method: POST\n</p>\n\n<p>\n <ins>\n  Request Body\n </ins>\n</p>\n\n<p>\n {\n <br/>\n \"data\": \"&lt;Description  column_1&gt;,\u2026\u2026.,&lt;Description column_n&gt;;\n <br/>\n &lt;value_1&gt;,\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026..,&lt;value_n&gt;;\n <br/>\n \u2026..\n <br/>\n &lt;value_m+1&gt;,\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026..,&lt;value_m+n&gt;; \"\n <br/>\n }\n</p>\n\n<p>\n <ins>\n  Response\n </ins>\n <br/>\n <em>\n  {\n  <br/>\n  \"url\": \"&lt;apibaseurl&gt;/consumption/&lt;component-id&gt;/{measurement|calculation}/&lt;date&gt;\"\n  <br/>\n  }\n </em>\n</p>\n\n<p>\n For examples for requests and responses see\n <a class=\"wiki-page\" href=\"/redmine/projects/finesce-domain-specific-enablers/wiki/Generation_Schedule_Manager_DSE\">\n  Generation_Schedule_Manager_DSE\n </a>\n .\n</p>\n\n\n",
            "Copyright": "\n<p>\n Copyright \u00a9 2015 by FINESCE\n</p>\n\n\n",
            "Glossary": "\n<ul>\n <li>\n  B2B: Business to Business\n </li>\n <li>\n  VPP: Virtual Power Plant\n </li>\n <li>\n  REST: Representational State Transfer\n </li>\n</ul>\n\n\n",
            "References": "\n<ul>\n <li>\n  B2B:\n  <a class=\"external\" href=\"http://en.wikipedia.org/wiki/Business-to-business\">\n   http://en.wikipedia.org/wiki/Business-to-business\n  </a>\n </li>\n <li>\n  VPP:\n  <a class=\"external\" href=\"http://en.wikipedia.org/wiki/Virtual_power_plant\">\n   http://en.wikipedia.org/wiki/Virtual_power_plant\n  </a>\n </li>\n <li>\n  REST:\n  <a class=\"external\" href=\"http://en.wikipedia.org/wiki/Representational_state_transfer\">\n   http://en.wikipedia.org/wiki/Representational_state_transfer\n  </a>\n </li>\n</ul>\n\n\n",
            "Details": "",
            "Preface": "\n<p>\n Within this document you find a self-contained open specification of the aforementioned Domain Specific Enabler (DSE).\n</p>\n\n<p>\n Please consult the appropriate pages on the\n <a class=\"external\" href=\"http://www.finesce.eu/Trial_Site_Ireland.html\">\n  FINESCE\n </a>\n website in order to understand the complete context of the related FINESCE trials and this DSE.\n</p>\n\n\n",
            "ReutilisedTech": "\n<ul>\n <li>\n  Offers a RESTful HTTP API\n </li>\n</ul>\n\n\n"
        },
        "WP": "",
        "Terms and Conditions": "\n<p>\n This DSE will be available as Open Source (Apache License 2.0).\n</p>\n\n\n",
        "wiki_attachments": [],
        "Open Source": "",
        "Contact Person": "\n<p>\n Adelheid Weinert\n <br/>\n QSC AG\n <br/>\n <a class=\"email\" href=\"mailto:Adelheid.weinertREMOVE-NO-SPAM@qsc.de\">\n  Adelheid.weinertREMOVE-NO-SPAM@qsc.de\n </a>\n</p>\n\n",
        "Overview": "\n<p>\n In the trial of the B2B energy ecosystem a factory and a Virtual Power Plant representing respectively the energy consumer and energy generation side are combined. The target of this setup is to balance the use of energy by the factory with the generation of energy from renewable sources. In this approach an energy-flexible factory is adapted to volatile energy supply and prices which leads to an energy driven production planning. The balancing between the energy generation and consumption is done by matching the profiles of energy generation and consumption, based on a variation of energy profiles for the factory and the production as well as the forecasted data of the VPP.\n</p>\n\n<p>\n The Production Schedule Managers is designed for the energy consumption to provide the profiles which enable the applications to balance the energy generation and consumption.\n</p>\n\n\n",
        "Downloads": "\n<p>\n Downloads for this DSE are not available yet.\n</p>\n\n\n",
        "Instances": "\n<p>\n An instance of this DSE\u2019s reference implementation runs as a part of the trial and is not publicly accessible.\n</p>\n\n\n"
    }
]